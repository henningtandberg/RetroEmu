name: "Build and Test on all platforms"

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOTNET_VERSION: "8.0.x"

jobs:
  tests:
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
        project:
          - tests/RetroEmu.GB.Tests/RetroEmu.GB.Tests.csproj
          - tests/RetroEmu.GB.Blargg.Tests/RetroEmu.GB.Blargg.Tests.csproj
          - tests/RetroEmu.GB.GBMicro.Tests/RetroEmu.GB.GBMicro.Tests.csproj
    runs-on: ${{ matrix.os }}
    name: "${{ matrix.project }} on ${{ matrix.os }}"
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Setup .NET"
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: "Restore"
        run: dotnet restore
          
      # Install FreeImage depending on OS
      - name: "Install FreeImage (Linux)"
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update && sudo apt-get install -y libfreeimage-dev
          echo "LD_LIBRARY_PATH=/usr/lib/x86_64-linux-gnu" >> $GITHUB_ENV

      - name: "Install FreeImage (macOS)"
        if: matrix.os == 'macos-latest'
        run: |
          brew install freeimage
          echo "DYLD_LIBRARY_PATH=/usr/local/lib:/opt/homebrew/lib" >> $GITHUB_ENV

      - name: "Install FreeImage (Windows)"
        if: matrix.os == 'windows-latest'
        run: |
          choco install freeimage --yes
          echo "C:\ProgramData\chocolatey\lib\freeimage\tools" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append


      - name: "Build"
        run: dotnet build --no-restore --configuration Release

      - name: "Run Tests"
        run: dotnet test ${{ matrix.project }} --no-build --configuration Release
